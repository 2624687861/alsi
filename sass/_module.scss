/* initial */
@mixin initial(){
    * {
        box-sizing: border-box;
    }
    li {
        list-style: none;
    }
    a,a:link,a:hover,a:active,a:visited {
        text-decoration: none;
    }
    a:focus,button:focus {
        outline: none;
    }
}

/* base */
@mixin clearfix(){
    clear: both;
    overflow: hidden;
    *zoom: 1;
}
@mixin clearboth(){
    width: 100%;
    clear: both;
    overflow: hidden;
}

@mixin border-radius($radius:4px){
    border-radius: $radius;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
}
@mixin text-shadow($shadow){
    text-shadow: $shadow;
}
@mixin box-shadow($shadow){
    box-shadow: $shadow;
}

@mixin absolute($top:0px,$left:0px){
    position: absolute;
    top: $top;
    left: $left;
}
@mixin absolute2(){
    position: absolute;
}
@mixin relative($top:0px,$left:0px){
    position: relative;
    top: $top;
    left: $left;
}
@mixin fixed($top:0px,$left:0px){
    position: fixed;
    top: $top;
    left: $left;
}

@mixin transition($transi){
    transition: $transi;
    -moz-transition: $transi;
    -webkit-transition: $transi;
    -ms-transition: $transi;
}
@mixin transform($transf){
    transform: $transf;
    -webkit-transform: $transf;
    -moz-transform: $transf;
    -ms-transform: $transf;
}
@mixin animation($name,$animation){
    animation: $name $animation;
    -webkit-animation: $name $animation;
    -moz-animation: $name $animation;
    -ms-animation: $name $animation;
}
@mixin perspective($perspective:1000px){
    perspective: $perspective;
    -webkit-perspective: $perspective;
    -moz-perspective: $perspective;
    -ms-perspective: $perspective;
}
@mixin preserve-3d($preserve:preserve-3d){
    transform-style: $preserve;
    -webkit-transform-style: $preserve;
    -moz-transform-style: $preserve;
    -ms-transform-style: $preserve;
}




/* media queries */
@mixin MQ($size){
    @if $size == xs{
        @media only screen and (max-width: $sm){
            @content;
        }
    }@else if $size == sm{
        @media only screen and (min-width: $sm+1) and (max-width: $md){
            @content;
        }
    }@else if $size == md{
        @media only screen and (min-width: $md+1) and (max-width: $lg){
            @content;
        }
    }@else if $size == lg{
        @media only screen and (min-width: $lg+1){
            @content;
        } 
    }
}
@mixin MQ2($size){
    @media only screen and (min-width: $size){
        @content;
    }
}

/* module */
@mixin button-links($button-base:darken($color11,10%),$button-hover:darken($color11,15%)){
    border: 1px solid darken($color11,16%);
    padding: .3em .6em;
    margin-left: .7em;
    @include border-radius(8px);
    @include text-shadow(0 1px 2px $color11);
    color: lignten($color10,50%);
    background-color: $button-base;
    &:hover {
        background-color: $button-hover;
    }
}
@mixin button-links2($button-base:darken($color11,10%),$button-hover:darken($color11,15%)){
    border: 1px solid darken($color11,16%);
    padding: .3em 1.2em;
    margin-left: .7em;
    @include border-radius(14px);
    @include text-shadow(0 1px 2px $color11);
    color: lignten($color10,50%);
    background-color: $button-base;
    &:hover {
        background-color: $button-hover;
    }
}
// 无默认值的参数 必须 先写
@mixin button-gray($radius:0px,$color_other:$color11){
    border: 1px darken($color11,40%) solid;
    padding: 5px 12px;
    border-radius: $radius;
    color: #000;
    background: darken($color_other,5%);
}

/* linear-radial only color transition */
@mixin linear-gradient($type,$co1,$co2){
    background: linear-gradient($type,$co1,$co2);
    background: -webkit-linear-gradient($type,$co1,$co2);
    background: -moz-linear-gradient($type,$co1,$co2);
    background: -ms-linear-gradient($type,$co1,$co2);
}

@mixin radial-gradient($type,$size,$co1,$co2){
    background: radial-gradient($type,$size,$co1,$co2);
    background: -webkit-radial-gradient($type,$size,$co1,$co2);
    background: -moz-radial-gradient($type,$size,$co1,$co2);
    background: -ms-radial-gradient($type,$size,$co1,$co2);
}

/* keyframes */    // animation 名称 变频参数 规整语句
//@mixin keyframes($name,$json,$statement){
//  @keyframes $name {
//      from {transform:$statement;}
//      @each $key,$value in $json {
//          $key {
//              transform: $value;
//          }
//      }
//      to {transform:$statement;}
//  }
//  @-webkit-keyframes $name {
//      from {-webkit-transform:$statement;}
//      @each $key,$value in $json {
//          $key {
//              -webkit-transform: $value;
//          }
//      }
//      to {-webkit-transform:$statement;}
//  }
//  @-moz-keyframes $name {
//      from {-moz-transform:$statement;}
//      @each $key,$value in $json {
//          $key {
//              -moz-transform: $value;
//          }
//      }
//      to {-moz-transform:$statement;}
//  }
//  @-ms-keyframes $name {
//      from {-ms-transform:$statement;}
//      @each $key,$value in $json {
//          $key {
//              -ms-transform: $value;
//          }
//      }
//      to {-ms-transform:$statement;}
//  }
//}

// 对于 @mixin keyframes 的 相关备注:
// 备注1 ： @each 可以遍历对象 和 数组 以及 类似 二维数组  : $colorClass  nth($colorClass,1) 二维数组中的第几个？
// 备注2 ： @each 对象 each $key, $val in (h1: 2em, h2: 1.5em, h3: 1.2em)  $key/$value 类似json数据
// 备注3 ： @each 普通数组 @each $i in $arr  使用 #{$i}得到 值 ,问 单纯 $i 情况下 得到 什么 index 吗？
//1实例: $btnColorClass: (primary #0078E7 #fff) (blue #00A3CF #fff) (orange #F47837 #fff) 
//@each $colorClass in $btnColorClass{
//$class:      nth($colorClass,1);
//$bgColor:    nth($colorClass,2);
//$textColor:  nth($colorClass,3);










